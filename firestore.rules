rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funciones de Ayuda (Sin cambios, están bien) ---
    function doesNotChangeFields(disallowedFields) {
      return !request.resource.data.diff(resource.data).affectedKeys().hasAny(disallowedFields);
    }

    //============================================
    // Reglas para Perfiles de Usuario (users)
    //============================================
    match /users/{userId} {
      allow read: if true;

      // CORRECCIÓN DE SEGURIDAD:
      // Se añade una condición para evitar que un usuario se autoasigne el rol de administrador al crear su perfil.
      allow create: if request.auth != null
                      && request.auth.uid == userId
                      && !("isAdmin" in request.resource.data);

      allow delete: if request.auth != null && request.auth.uid == userId;

      allow update:
        if (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin)
        || (request.auth != null
            && request.auth.uid == userId
            && doesNotChangeFields(['isPremium','isAdmin','followersCount','followingCount','ratingCount','ratingAverage']));

      // --- Subcolecciones de usuarios (Sin cambios, están bien) ---
      match /favorites/{listingId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /followers/{followerId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null;
      }
      match /following/{followingId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && request.auth.uid != userId;
        allow update, delete: if false;
      }
    }

    //============================================
    // Reglas para Anuncios (listings) (Sin cambios, están bien)
    //============================================
    match /listings/{listingId} {
  allow read: if true;
  allow create: if request.auth != null;

  // ✅ CORRECCIÓN: Permitir cambios si eres el dueño O si eres un admin.
  // Se usa 'ownerId' para mantener consistencia con 'businesses'.
  allow update, delete: if request.auth.uid == resource.data.ownerId || isAdmin();
}
    //============================================
    // Reglas para Perfiles de Negocio (businesses) (Sin cambios, están bien)
    //============================================
    match /businesses/{businessId} {
      allow read: if true;
      allow create: if request.auth.uid != null && request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if request.auth.uid == resource.data.ownerId;
    }

    //============================================
    // Reglas para Chats (chats) (Sin cambios, están bien)
    //============================================
    match /chats/{chatId} {
      function isParticipant() {
        return request.auth.uid in resource.data.participants;
      }

      allow read, update: if isParticipant();
      allow create: if request.auth.uid in request.resource.data.participants;

      // --- Reglas para la Subcolección de Mensajes (Sin cambios, están bien) ---
      match /messages/{messageId} {
        allow read: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants
                      && request.resource.data.sender == request.auth.uid;
        allow update, delete: if false;
      }
    }
  }
}